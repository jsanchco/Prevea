@model Company

<script>
    GeneralDataCompany.init();
</script>

@if (ViewBag.Error != null)
{
    <div id="errorFromBack" class="alert alert-danger alert-dismissable" style="">
        <button type="button" class="close" data-dismiss="alert">&times;</button>
        <ul>
            @foreach (var error in ViewBag.Error)
            {
                <li>
                    @error
                </li>
            }
        </ul>
    </div>
}

<div id="errorFromFront" class="alert alert-danger alert-dismissable" style="display: none">
</div>


<div class="row" id="pageGeneralDataCompany" style="width: 95%">

    <div class="col-sm-12">        

            @using (Ajax.BeginForm("UpdateGeneralDataCompany", "Company", null, new AjaxOptions
            {
                HttpMethod = "POST",
                UpdateTargetId = "framePpal"
            }, new { id = "formGeneralDataCompany" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)

                <div class="row">
                    <div class="form-group">
                        <label class="col-sm-3 control-label">Razón Social</label>
                        <label class="col-sm-3 control-label">CIF/NIF</label>
                        <label class="col-sm-5 control-label">Actividad</label>
                    </div>

                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.TextBoxFor(model => model.Name, new { @id = "textBoxName", @class = "form-control", style = "width:100%", placeholder = "Razón Social" })
                        </div>

                        <div class="col-sm-3">
                            @Html.TextBoxFor(model => model.NIF, new { @id = "textBoxNIF", @class = "form-control", style = "width:100%", placeholder = "CIF/NIF" })
                        </div>

                        <div class="col-sm-5">
                            @(Html.Kendo()
                              .DropDownListFor(model => model.CnaeId)
                              .Name("CnaeId")
                              .OptionLabel("-- Seleccionar --")
                              .DataTextField("Text")
                              .DataValueField("Value")
                              .Filter("contains")
                              .MinLength(3)
                              .DataSource(source =>
                              {
                                  source.Read(read =>
                                  {
                                      read.Action("GetCnaes", "Company");
                                  }).ServerFiltering(false);
                              })
                              .HtmlAttributes(new { style = "width: 100%" }))
                        </div>

                    </div>
                </div>

                <br />

                <div class="row">
                    <div class="form-group">
                        <label class="col-sm-7 control-label">Dirección</label>
                        <label class="col-sm-4 control-label">Provincia</label>
                    </div>


                    <div class="form-group">
                        <div class="col-sm-7">
                            @Html.TextBoxFor(model => model.Address, new { @id = "textBoxAddress", @class = "form-control", style = "width:100%", placeholder = "Dirección" })
                        </div>

                        <div class="col-sm-4">
                            @Html.TextBoxFor(model => model.Province, new { @id = "textBoxProvince", @class = "form-control", style = "width:100%", placeholder = "Provincia" })
                        </div>

                    </div>
                </div>

                <br />
                <br />
                <br />


                <div class="form-actions">

                    @Html.HiddenFor(model => model.Id)
                    @Html.HiddenFor(model => model.GestorId)
                    @Html.HiddenFor(model => model.FromSimulator)
                    @Html.HiddenFor(model => model.Date)

                    <input type="submit" id="btnValidate" value="Guardar" class="btn btn-prevea btn" />

                </div>
            }           

    </div>
</div>
