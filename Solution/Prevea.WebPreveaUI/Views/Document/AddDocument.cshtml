@model Document

@{
    ViewBag.Title = "AddDocument";
}

<style>
    .k-animation-container, .k-animation-container *, .k-animation-container ::after, .k-block .k-header, .k-list-container, .k-widget, .k-widget *, .k-widget ::before {
        box-sizing: initial;
    }

    .k-dropdown .k-input, .k-dropdown .k-state-focused .k-input, .k-menu .k-popup {
        color: #555555;
    }

    .k-autocomplete.k-state-default, .k-dropdown-wrap.k-state-default, .k-numeric-wrap.k-state-default, .k-picker-wrap.k-state-default {
        border: 1px solid #ebebeb;
        border-radius: 3px;
    }

    .blockquote.blockquote-default {
        font-size: inherit;
    }

</style>

<script>
    AddDocument.init();
</script>

<div  class="row" id="pageAddDocument" style="margin: 8px">
    
    <div class="row"><H1>Manual de Calidad</H1></div><br />

    <div class="row">
        <div class="col-sm-12">
            <ol class="breadcrumb bc-2">
                <li class="active">
                    <a id="br-documents" onclick="GeneralData.loadPage(this)" style="cursor: pointer;">
                        <i class="icon-book"></i>
                        Biblioteca
                    </a>
                </li>
                <li class="active">
                    <a id="br-document-addDocument" onclick="GeneralData.loadPage(this)" style="cursor: pointer;">
                        <strong>Agregar Documento</strong>
                    </a>
                </li>
            </ol>
        </div>
    </div>

    @if (ViewBag.Error != null)
    {
        <div id="errorFromBack" class="alert alert-danger alert-dismissable" style="">
            <button type="button" class="close" data-dismiss="alert">&times;</button>
            <ul>
                @foreach (var error in ViewBag.Error)
                {
                    <li>
                        @error
                    </li>
                }
            </ul>
        </div>
    }

    <div id="errorFromFront" class="alert alert-danger alert-dismissable" style="display: none">
    </div>

    <div class="well well-sm" id="information">
        <h4>Por favor rellena los datos del documento</h4>
    </div>

    <div class="row">
        <div class="col-sm-12">

            <blockquote class="blockquote-default">
                @using (Ajax.BeginForm("SaveDocument", "Document", null, new AjaxOptions
                {
                    HttpMethod = "POST",
                    UpdateTargetId = "framePpal"
                }, new {id = "formAddDocument"}))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)
                    <div class="row">
                        <div class="form-group">
                            <label class="col-sm-4 control-label">Area</label>
                            <label class="col-sm-8 control-label">Descripción</label>
                        </div>


                        <div class="form-group">
                            <div class="col-sm-4">
                                @(Html.Kendo()
                                      .DropDownListFor(model => model.AreaId)
                                      .Name("AreaId")
                                      .OptionLabel("-- Seleccionar --")
                                      .DataTextField("Text")
                                      .DataValueField("Value")
                                      .DataSource(source =>
                                      {
                                          source.Read(read =>
                                          {
                                              read.Action("GetAreas", "Document");
                                          });
                                      })
                                      .Events(e =>
                                      {
                                          e.Change("AddDocument.onChangeComboBoxArea");
                                      })
                                      .HtmlAttributes(new {style = "width: 100%"}))
                            </div>

                            <div class="col-sm-8">
                                @Html.TextAreaFor(model => model.Description, new {@id = "textAreaDescription", @class = "form-control autogrow", style = "width:100%", placeholder = "Descripción"})
                            </div>

                        </div>
                    </div>

                    <br/>

                    <div class="row">
                        <div class="col-sm-4">

                            @(Html.Kendo().Upload()
                                  .Name("files")
                                  .HtmlAttributes(new {accept = ".doc,.docx,.pdf,.xls,.xlsx"})
                                  .Multiple(false)
                                  .Messages(m => m.Select("Seleccionar archivo"))
                                  .Async(async => async
                                      .Save("SaveFile", "Document")
                                  )
                                  .Events(c => c
                                      .Upload("AddDocument.onUpload")
                                      .Success("AddDocument.onSuccess")
                                  )
                                  )

                        </div>
                    </div>

                    <br/>
                    <br/>
                    <br/>


                    <div class="form-actions">
                        <input type="submit" id="btnValidate" value="Guardar" class="btn btn-prevea btn"/>
                        <input type="button" id="btnCancel" value="Cancelar" class="btn"/>
                    </div>

                }

            </blockquote>

        </div>
    </div>

</div>

<br />
